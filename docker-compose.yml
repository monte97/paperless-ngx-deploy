version: '3.8'

services:
  #---------------------------------------------------------------------
  # 1. Paperless-ngx Webserver and Worker
  #---------------------------------------------------------------------
  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-webserver
    ports:
      # Maps host port (default 8000) to container port 8000
      - "${PAPERLESS_PORT:-8000}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      # Data storage for Paperless
      - ./data:/usr/src/paperless/data
      - ./media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      # Directory for consuming new documents
      - ./consume:/usr/src/paperless/consume
    environment:
      # --- Values are read from the .env file or the shell ---
      PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USER}
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_ADMIN_PASSWORD}
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY}
      PAPERLESS_DBHOST: db
      PAPERLESS_REDIS: redis://redis:6379
      PAPERLESS_DBNAME: ${POSTGRES_DB}
      PAPERLESS_DBUSER: ${POSTGRES_USER}
      PAPERLESS_DBPASS: ${POSTGRES_PASSWORD}
      # UID and GID read from .env file for volume permissions
      USERMAP_UID: ${USERMAP_UID:-1000}
      USERMAP_GID: ${USERMAP_GID:-1000}
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - paperless-net

  #---------------------------------------------------------------------
  # 2. Database (PostgreSQL)
  #---------------------------------------------------------------------
  db:
    image: postgres:17-alpine
    container_name: paperless-db
    volumes:
      # Persistent storage for PostgreSQL data
      - pgdata:/var/lib/postgresql/data
    environment:
      # Loads variables from the .env file for database consistency
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    networks:
      - paperless-net

  #---------------------------------------------------------------------
  # 3. Redis (Broker for the task queue)
  #---------------------------------------------------------------------
  redis:
    image: redis:8-alpine
    container_name: paperless-redis
    restart: unless-stopped
    networks:
      - paperless-net

#---------------------------------------------------------------------
# Top-level Volumes definition
#---------------------------------------------------------------------
volumes:
  # Used by the PostgreSQL service for persistent database storage
  pgdata:

#---------------------------------------------------------------------
# Top-level Networks definition
#---------------------------------------------------------------------
networks:
  paperless-net:
    driver: bridge
